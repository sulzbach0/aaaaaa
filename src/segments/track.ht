import { SpotifyGqlApi } from '../../dependencies/hetu_spotify_gql_client/lib/assets/hetu/spotify_gql_api_client.ht'
import { Converters } from '../converter/converter.ht'

class TrackEndpoint {
  var client: SpotifyGqlApi

  construct (this.client)

  fun getTrack(id: string) {
    return client.track.getTrack(id).then((data) {
      return Converters.fullTracks([data])[0]
    })
  }

  fun save(trackIds: List) async {
    await client.track.save(trackIds)
    return true
  }

  fun unsave(trackIds: List) async {
    await client.track.unsave(trackIds)
    return true
  }

  fun radio(trackId: string) {
    return client.track.getTrack(trackId).then((data){
      var query = "${data['name']} Radio"
      return client.search.playlists(query, limit: 20).then((data) {
        var playlists = data["items"];
        var radioPlaylist = playlists.firstWhere((playlist) => playlist["name"] == query, orElse: () => null);
        return client.playlist.tracks(radioPlaylist["id"], offset: 0, limit: 50)
          .then((data) {
            var tracks = data["items"].map((item){
              item["track"]["available_markets"] = null
              return item["track"]
            })
            .toList()

            return Converters.fullTracks(tracks)
          });
      })
    })
  }
}

export { TrackEndpoint }